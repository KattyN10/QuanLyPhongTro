#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QUANLIPHONGTRO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLPHONGTRO")]
	public partial class QuanLiPhongTroDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertHopDong(HopDong instance);
    partial void UpdateHopDong(HopDong instance);
    partial void DeleteHopDong(HopDong instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiPhong(LoaiPhong instance);
    partial void UpdateLoaiPhong(LoaiPhong instance);
    partial void DeleteLoaiPhong(LoaiPhong instance);
    partial void InsertPhong(Phong instance);
    partial void UpdatePhong(Phong instance);
    partial void DeletePhong(Phong instance);
    partial void InsertTbPhong(TbPhong instance);
    partial void UpdateTbPhong(TbPhong instance);
    partial void DeleteTbPhong(TbPhong instance);
    partial void InsertThietBi(ThietBi instance);
    partial void UpdateThietBi(ThietBi instance);
    partial void DeleteThietBi(ThietBi instance);
    #endregion
		
		public QuanLiPhongTroDataContext() : 
				base(global::QUANLIPHONGTRO.Properties.Settings.Default.QLPHONGTROConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLiPhongTroDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLiPhongTroDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLiPhongTroDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLiPhongTroDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<HopDong> HopDongs
		{
			get
			{
				return this.GetTable<HopDong>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiPhong> LoaiPhongs
		{
			get
			{
				return this.GetTable<LoaiPhong>();
			}
		}
		
		public System.Data.Linq.Table<Phong> Phongs
		{
			get
			{
				return this.GetTable<Phong>();
			}
		}
		
		public System.Data.Linq.Table<TbPhong> TbPhongs
		{
			get
			{
				return this.GetTable<TbPhong>();
			}
		}
		
		public System.Data.Linq.Table<ThietBi> ThietBis
		{
			get
			{
				return this.GetTable<ThietBi>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MA;
		
		private System.Nullable<int> _MAHOPDONG;
		
		private System.Nullable<decimal> _TIENDIEN;
		
		private System.Nullable<decimal> _TIENNUOC;
		
		private System.Nullable<decimal> _DICHVUKHAC;
		
		private System.Nullable<decimal> _SOTIENPHAITRA;
		
		private System.Nullable<decimal> _DATHANHTOAN;
		
		private EntityRef<HopDong> _HOPDONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAChanging(int value);
    partial void OnMAChanged();
    partial void OnMAHOPDONGChanging(System.Nullable<int> value);
    partial void OnMAHOPDONGChanged();
    partial void OnTIENDIENChanging(System.Nullable<decimal> value);
    partial void OnTIENDIENChanged();
    partial void OnTIENNUOCChanging(System.Nullable<decimal> value);
    partial void OnTIENNUOCChanged();
    partial void OnDICHVUKHACChanging(System.Nullable<decimal> value);
    partial void OnDICHVUKHACChanged();
    partial void OnSOTIENPHAITRAChanging(System.Nullable<decimal> value);
    partial void OnSOTIENPHAITRAChanged();
    partial void OnDATHANHTOANChanging(System.Nullable<decimal> value);
    partial void OnDATHANHTOANChanged();
    #endregion
		
		public HoaDon()
		{
			this._HOPDONG = default(EntityRef<HopDong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MA
		{
			get
			{
				return this._MA;
			}
			set
			{
				if ((this._MA != value))
				{
					this.OnMAChanging(value);
					this.SendPropertyChanging();
					this._MA = value;
					this.SendPropertyChanged("MA");
					this.OnMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHOPDONG", DbType="Int")]
		public System.Nullable<int> MAHOPDONG
		{
			get
			{
				return this._MAHOPDONG;
			}
			set
			{
				if ((this._MAHOPDONG != value))
				{
					if (this._HOPDONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHOPDONGChanging(value);
					this.SendPropertyChanging();
					this._MAHOPDONG = value;
					this.SendPropertyChanged("MAHOPDONG");
					this.OnMAHOPDONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIENDIEN", DbType="Money")]
		public System.Nullable<decimal> TIENDIEN
		{
			get
			{
				return this._TIENDIEN;
			}
			set
			{
				if ((this._TIENDIEN != value))
				{
					this.OnTIENDIENChanging(value);
					this.SendPropertyChanging();
					this._TIENDIEN = value;
					this.SendPropertyChanged("TIENDIEN");
					this.OnTIENDIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIENNUOC", DbType="Money")]
		public System.Nullable<decimal> TIENNUOC
		{
			get
			{
				return this._TIENNUOC;
			}
			set
			{
				if ((this._TIENNUOC != value))
				{
					this.OnTIENNUOCChanging(value);
					this.SendPropertyChanging();
					this._TIENNUOC = value;
					this.SendPropertyChanged("TIENNUOC");
					this.OnTIENNUOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DICHVUKHAC", DbType="Money")]
		public System.Nullable<decimal> DICHVUKHAC
		{
			get
			{
				return this._DICHVUKHAC;
			}
			set
			{
				if ((this._DICHVUKHAC != value))
				{
					this.OnDICHVUKHACChanging(value);
					this.SendPropertyChanging();
					this._DICHVUKHAC = value;
					this.SendPropertyChanged("DICHVUKHAC");
					this.OnDICHVUKHACChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTIENPHAITRA", DbType="Money")]
		public System.Nullable<decimal> SOTIENPHAITRA
		{
			get
			{
				return this._SOTIENPHAITRA;
			}
			set
			{
				if ((this._SOTIENPHAITRA != value))
				{
					this.OnSOTIENPHAITRAChanging(value);
					this.SendPropertyChanging();
					this._SOTIENPHAITRA = value;
					this.SendPropertyChanged("SOTIENPHAITRA");
					this.OnSOTIENPHAITRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATHANHTOAN", DbType="Money")]
		public System.Nullable<decimal> DATHANHTOAN
		{
			get
			{
				return this._DATHANHTOAN;
			}
			set
			{
				if ((this._DATHANHTOAN != value))
				{
					this.OnDATHANHTOANChanging(value);
					this.SendPropertyChanging();
					this._DATHANHTOAN = value;
					this.SendPropertyChanged("DATHANHTOAN");
					this.OnDATHANHTOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HopDong_HoaDon", Storage="_HOPDONG", ThisKey="MAHOPDONG", OtherKey="MA", IsForeignKey=true)]
		public HopDong HopDong
		{
			get
			{
				return this._HOPDONG.Entity;
			}
			set
			{
				HopDong previousValue = this._HOPDONG.Entity;
				if (((previousValue != value) 
							|| (this._HOPDONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOPDONG.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._HOPDONG.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MAHOPDONG = value.MA;
					}
					else
					{
						this._MAHOPDONG = default(Nullable<int>);
					}
					this.SendPropertyChanged("HopDong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOPDONG")]
	public partial class HopDong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MA;
		
		private System.Nullable<int> _MAKHACHHANG;
		
		private System.Nullable<int> _MAPHONG;
		
		private System.Nullable<decimal> _TIENDATCOC;
		
		private System.Nullable<System.DateTime> _NGAYTHUE;
		
		private System.Nullable<System.DateTime> _NGAYTRA;
		
		private EntitySet<HoaDon> _HOADONs;
		
		private EntityRef<KhachHang> _KHACHHANG;
		
		private EntityRef<Phong> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAChanging(int value);
    partial void OnMAChanged();
    partial void OnMAKHACHHANGChanging(System.Nullable<int> value);
    partial void OnMAKHACHHANGChanged();
    partial void OnMAPHONGChanging(System.Nullable<int> value);
    partial void OnMAPHONGChanged();
    partial void OnTIENDATCOCChanging(System.Nullable<decimal> value);
    partial void OnTIENDATCOCChanged();
    partial void OnNGAYTHUEChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYTHUEChanged();
    partial void OnNGAYTRAChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYTRAChanged();
    #endregion
		
		public HopDong()
		{
			this._HOADONs = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HOADONs), new Action<HoaDon>(this.detach_HOADONs));
			this._KHACHHANG = default(EntityRef<KhachHang>);
			this._PHONG = default(EntityRef<Phong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MA
		{
			get
			{
				return this._MA;
			}
			set
			{
				if ((this._MA != value))
				{
					this.OnMAChanging(value);
					this.SendPropertyChanging();
					this._MA = value;
					this.SendPropertyChanged("MA");
					this.OnMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHACHHANG", DbType="Int")]
		public System.Nullable<int> MAKHACHHANG
		{
			get
			{
				return this._MAKHACHHANG;
			}
			set
			{
				if ((this._MAKHACHHANG != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHACHHANGChanging(value);
					this.SendPropertyChanging();
					this._MAKHACHHANG = value;
					this.SendPropertyChanged("MAKHACHHANG");
					this.OnMAKHACHHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Int")]
		public System.Nullable<int> MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIENDATCOC", DbType="Money")]
		public System.Nullable<decimal> TIENDATCOC
		{
			get
			{
				return this._TIENDATCOC;
			}
			set
			{
				if ((this._TIENDATCOC != value))
				{
					this.OnTIENDATCOCChanging(value);
					this.SendPropertyChanging();
					this._TIENDATCOC = value;
					this.SendPropertyChanged("TIENDATCOC");
					this.OnTIENDATCOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTHUE", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYTHUE
		{
			get
			{
				return this._NGAYTHUE;
			}
			set
			{
				if ((this._NGAYTHUE != value))
				{
					this.OnNGAYTHUEChanging(value);
					this.SendPropertyChanging();
					this._NGAYTHUE = value;
					this.SendPropertyChanged("NGAYTHUE");
					this.OnNGAYTHUEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTRA", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYTRA
		{
			get
			{
				return this._NGAYTRA;
			}
			set
			{
				if ((this._NGAYTRA != value))
				{
					this.OnNGAYTRAChanging(value);
					this.SendPropertyChanging();
					this._NGAYTRA = value;
					this.SendPropertyChanged("NGAYTRA");
					this.OnNGAYTRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HopDong_HoaDon", Storage="_HOADONs", ThisKey="MA", OtherKey="MAHOPDONG")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HopDong", Storage="_KHACHHANG", ThisKey="MAKHACHHANG", OtherKey="MA", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KhachHang previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HopDongs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HopDongs.Add(this);
						this._MAKHACHHANG = value.MA;
					}
					else
					{
						this._MAKHACHHANG = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_HopDong", Storage="_PHONG", ThisKey="MAPHONG", OtherKey="MA", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				Phong previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.HopDongs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.HopDongs.Add(this);
						this._MAPHONG = value.MA;
					}
					else
					{
						this._MAPHONG = default(Nullable<int>);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HopDong = this;
		}
		
		private void detach_HOADONs(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HopDong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MA;
		
		private string _HOTENDEM;
		
		private string _TEN;
		
		private System.Nullable<bool> _PHAI;
		
		private string _CMND;
		
		private string _SODT;
		
		private string _QUEQUAN;
		
		private string _HKTT;
		
		private EntitySet<HopDong> _HOPDONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAChanging(int value);
    partial void OnMAChanged();
    partial void OnHOTENDEMChanging(string value);
    partial void OnHOTENDEMChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnPHAIChanging(System.Nullable<bool> value);
    partial void OnPHAIChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnSODTChanging(string value);
    partial void OnSODTChanged();
    partial void OnQUEQUANChanging(string value);
    partial void OnQUEQUANChanged();
    partial void OnHKTTChanging(string value);
    partial void OnHKTTChanged();
    #endregion
		
		public KhachHang()
		{
			this._HOPDONGs = new EntitySet<HopDong>(new Action<HopDong>(this.attach_HOPDONGs), new Action<HopDong>(this.detach_HOPDONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MA
		{
			get
			{
				return this._MA;
			}
			set
			{
				if ((this._MA != value))
				{
					this.OnMAChanging(value);
					this.SendPropertyChanging();
					this._MA = value;
					this.SendPropertyChanged("MA");
					this.OnMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTENDEM", DbType="NVarChar(30)")]
		public string HOTENDEM
		{
			get
			{
				return this._HOTENDEM;
			}
			set
			{
				if ((this._HOTENDEM != value))
				{
					this.OnHOTENDEMChanging(value);
					this.SendPropertyChanging();
					this._HOTENDEM = value;
					this.SendPropertyChanged("HOTENDEM");
					this.OnHOTENDEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(15)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHAI", DbType="Bit")]
		public System.Nullable<bool> PHAI
		{
			get
			{
				return this._PHAI;
			}
			set
			{
				if ((this._PHAI != value))
				{
					this.OnPHAIChanging(value);
					this.SendPropertyChanging();
					this._PHAI = value;
					this.SendPropertyChanged("PHAI");
					this.OnPHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(12)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODT", DbType="VarChar(10)")]
		public string SODT
		{
			get
			{
				return this._SODT;
			}
			set
			{
				if ((this._SODT != value))
				{
					this.OnSODTChanging(value);
					this.SendPropertyChanging();
					this._SODT = value;
					this.SendPropertyChanged("SODT");
					this.OnSODTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUEQUAN", DbType="NVarChar(50)")]
		public string QUEQUAN
		{
			get
			{
				return this._QUEQUAN;
			}
			set
			{
				if ((this._QUEQUAN != value))
				{
					this.OnQUEQUANChanging(value);
					this.SendPropertyChanging();
					this._QUEQUAN = value;
					this.SendPropertyChanged("QUEQUAN");
					this.OnQUEQUANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HKTT", DbType="NVarChar(50)")]
		public string HKTT
		{
			get
			{
				return this._HKTT;
			}
			set
			{
				if ((this._HKTT != value))
				{
					this.OnHKTTChanging(value);
					this.SendPropertyChanging();
					this._HKTT = value;
					this.SendPropertyChanged("HKTT");
					this.OnHKTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HopDong", Storage="_HOPDONGs", ThisKey="MA", OtherKey="MAKHACHHANG")]
		public EntitySet<HopDong> HopDongs
		{
			get
			{
				return this._HOPDONGs;
			}
			set
			{
				this._HOPDONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOPDONGs(HopDong entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_HOPDONGs(HopDong entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIPHONG")]
	public partial class LoaiPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MA;
		
		private string _TENLOAIPHONG;
		
		private System.Nullable<decimal> _DONGIA;
		
		private EntitySet<Phong> _PHONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAChanging(int value);
    partial void OnMAChanged();
    partial void OnTENLOAIPHONGChanging(string value);
    partial void OnTENLOAIPHONGChanged();
    partial void OnDONGIAChanging(System.Nullable<decimal> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public LoaiPhong()
		{
			this._PHONGs = new EntitySet<Phong>(new Action<Phong>(this.attach_PHONGs), new Action<Phong>(this.detach_PHONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MA
		{
			get
			{
				return this._MA;
			}
			set
			{
				if ((this._MA != value))
				{
					this.OnMAChanging(value);
					this.SendPropertyChanging();
					this._MA = value;
					this.SendPropertyChanged("MA");
					this.OnMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAIPHONG", DbType="NVarChar(30)")]
		public string TENLOAIPHONG
		{
			get
			{
				return this._TENLOAIPHONG;
			}
			set
			{
				if ((this._TENLOAIPHONG != value))
				{
					this.OnTENLOAIPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENLOAIPHONG = value;
					this.SendPropertyChanged("TENLOAIPHONG");
					this.OnTENLOAIPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Money")]
		public System.Nullable<decimal> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_Phong", Storage="_PHONGs", ThisKey="MA", OtherKey="MALOAIPHONG")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._PHONGs;
			}
			set
			{
				this._PHONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHONGs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = this;
		}
		
		private void detach_PHONGs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONG")]
	public partial class Phong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MA;
		
		private string _TENPHONG;
		
		private System.Nullable<int> _MALOAIPHONG;
		
		private EntitySet<HopDong> _HOPDONGs;
		
		private EntitySet<TbPhong> _TBPHONGs;
		
		private EntityRef<LoaiPhong> _LOAIPHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAChanging(int value);
    partial void OnMAChanged();
    partial void OnTENPHONGChanging(string value);
    partial void OnTENPHONGChanged();
    partial void OnMALOAIPHONGChanging(System.Nullable<int> value);
    partial void OnMALOAIPHONGChanged();
    #endregion
		
		public Phong()
		{
			this._HOPDONGs = new EntitySet<HopDong>(new Action<HopDong>(this.attach_HOPDONGs), new Action<HopDong>(this.detach_HOPDONGs));
			this._TBPHONGs = new EntitySet<TbPhong>(new Action<TbPhong>(this.attach_TBPHONGs), new Action<TbPhong>(this.detach_TBPHONGs));
			this._LOAIPHONG = default(EntityRef<LoaiPhong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MA
		{
			get
			{
				return this._MA;
			}
			set
			{
				if ((this._MA != value))
				{
					this.OnMAChanging(value);
					this.SendPropertyChanging();
					this._MA = value;
					this.SendPropertyChanged("MA");
					this.OnMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPHONG", DbType="NVarChar(30)")]
		public string TENPHONG
		{
			get
			{
				return this._TENPHONG;
			}
			set
			{
				if ((this._TENPHONG != value))
				{
					this.OnTENPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENPHONG = value;
					this.SendPropertyChanged("TENPHONG");
					this.OnTENPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAIPHONG", DbType="Int")]
		public System.Nullable<int> MALOAIPHONG
		{
			get
			{
				return this._MALOAIPHONG;
			}
			set
			{
				if ((this._MALOAIPHONG != value))
				{
					if (this._LOAIPHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIPHONGChanging(value);
					this.SendPropertyChanging();
					this._MALOAIPHONG = value;
					this.SendPropertyChanged("MALOAIPHONG");
					this.OnMALOAIPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_HopDong", Storage="_HOPDONGs", ThisKey="MA", OtherKey="MAPHONG")]
		public EntitySet<HopDong> HopDongs
		{
			get
			{
				return this._HOPDONGs;
			}
			set
			{
				this._HOPDONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_TbPhong", Storage="_TBPHONGs", ThisKey="MA", OtherKey="MAPHONG")]
		public EntitySet<TbPhong> TbPhongs
		{
			get
			{
				return this._TBPHONGs;
			}
			set
			{
				this._TBPHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_Phong", Storage="_LOAIPHONG", ThisKey="MALOAIPHONG", OtherKey="MA", IsForeignKey=true)]
		public LoaiPhong LoaiPhong
		{
			get
			{
				return this._LOAIPHONG.Entity;
			}
			set
			{
				LoaiPhong previousValue = this._LOAIPHONG.Entity;
				if (((previousValue != value) 
							|| (this._LOAIPHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIPHONG.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._LOAIPHONG.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._MALOAIPHONG = value.MA;
					}
					else
					{
						this._MALOAIPHONG = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiPhong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOPDONGs(HopDong entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_HOPDONGs(HopDong entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
		
		private void attach_TBPHONGs(TbPhong entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_TBPHONGs(TbPhong entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBPHONG")]
	public partial class TbPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPHONG;
		
		private int _MATHIETBI;
		
		private EntityRef<Phong> _PHONG;
		
		private EntityRef<ThietBi> _THIETBI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHONGChanging(int value);
    partial void OnMAPHONGChanged();
    partial void OnMATHIETBIChanging(int value);
    partial void OnMATHIETBIChanged();
    #endregion
		
		public TbPhong()
		{
			this._PHONG = default(EntityRef<Phong>);
			this._THIETBI = default(EntityRef<ThietBi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATHIETBI", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MATHIETBI
		{
			get
			{
				return this._MATHIETBI;
			}
			set
			{
				if ((this._MATHIETBI != value))
				{
					if (this._THIETBI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATHIETBIChanging(value);
					this.SendPropertyChanging();
					this._MATHIETBI = value;
					this.SendPropertyChanged("MATHIETBI");
					this.OnMATHIETBIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_TbPhong", Storage="_PHONG", ThisKey="MAPHONG", OtherKey="MA", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				Phong previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.TbPhongs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.TbPhongs.Add(this);
						this._MAPHONG = value.MA;
					}
					else
					{
						this._MAPHONG = default(int);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThietBi_TbPhong", Storage="_THIETBI", ThisKey="MATHIETBI", OtherKey="MA", IsForeignKey=true)]
		public ThietBi ThietBi
		{
			get
			{
				return this._THIETBI.Entity;
			}
			set
			{
				ThietBi previousValue = this._THIETBI.Entity;
				if (((previousValue != value) 
							|| (this._THIETBI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THIETBI.Entity = null;
						previousValue.TbPhongs.Remove(this);
					}
					this._THIETBI.Entity = value;
					if ((value != null))
					{
						value.TbPhongs.Add(this);
						this._MATHIETBI = value.MA;
					}
					else
					{
						this._MATHIETBI = default(int);
					}
					this.SendPropertyChanged("ThietBi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THIETBI")]
	public partial class ThietBi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MA;
		
		private string _TENTHIETBI;
		
		private EntitySet<TbPhong> _TBPHONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAChanging(int value);
    partial void OnMAChanged();
    partial void OnTENTHIETBIChanging(string value);
    partial void OnTENTHIETBIChanged();
    #endregion
		
		public ThietBi()
		{
			this._TBPHONGs = new EntitySet<TbPhong>(new Action<TbPhong>(this.attach_TBPHONGs), new Action<TbPhong>(this.detach_TBPHONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MA", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MA
		{
			get
			{
				return this._MA;
			}
			set
			{
				if ((this._MA != value))
				{
					this.OnMAChanging(value);
					this.SendPropertyChanging();
					this._MA = value;
					this.SendPropertyChanged("MA");
					this.OnMAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTHIETBI", DbType="NVarChar(30)")]
		public string TENTHIETBI
		{
			get
			{
				return this._TENTHIETBI;
			}
			set
			{
				if ((this._TENTHIETBI != value))
				{
					this.OnTENTHIETBIChanging(value);
					this.SendPropertyChanging();
					this._TENTHIETBI = value;
					this.SendPropertyChanged("TENTHIETBI");
					this.OnTENTHIETBIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThietBi_TbPhong", Storage="_TBPHONGs", ThisKey="MA", OtherKey="MATHIETBI")]
		public EntitySet<TbPhong> TbPhongs
		{
			get
			{
				return this._TBPHONGs;
			}
			set
			{
				this._TBPHONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBPHONGs(TbPhong entity)
		{
			this.SendPropertyChanging();
			entity.ThietBi = this;
		}
		
		private void detach_TBPHONGs(TbPhong entity)
		{
			this.SendPropertyChanging();
			entity.ThietBi = null;
		}
	}
}
#pragma warning restore 1591
